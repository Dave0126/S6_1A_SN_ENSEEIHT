Date de l'évaluation : mar. 16 mars 2021 23:45:16 CET

Nombre de similitudes (voir evaluations/penalites1/sim_java.txt) : 8
Les similitudes indiquent généralement du code à restructurer.

Erreurs checkstyle (différentes/types) : 25/9	(voir evaluations/penalites1//checkstyle.log)

Classe OperationInterditeException : NON DÉFINIE (ou pas sur SVN)	(pénalité : 2)

Procuration sur le jeu réel : Non identifiée	(pénalité : 2)

OperationInterditeException : JAMAIS LEVÉE
OperationInterditeException : JAMAIS RECUPÉRÉE

Utilisation de 'Scanner' : ok
	allumettes/Arbitre.java:	static Scanner sc;
	allumettes/Arbitre.java:	public static int scannerNumber(Scanner sc, Joueur currentJ, Jeu jeu1, boolean confiant)
	allumettes/Arbitre.java:	public static void start(Scanner sc, Joueur j1, Joueur j2, Jeu jeu1, boolean confiant)
	allumettes/Jouer.java:		Scanner sc = new Scanner(System.in);

Utilisation de 'split' : ok mais un seul split devrait suffir !  Code à restructurer...
	allumettes/Jouer.java:			String[] str1 = args[1].split("@");
	allumettes/Jouer.java:			String[] str2 = args[2].split("@");
	allumettes/Jouer.java:			String[] str1 = args[0].split("@");
	allumettes/Jouer.java:			String[] str2 = args[1].split("@");

Utilisation de 'Random' : ok
	allumettes/Arbitre.java:import java.util.Random;
	allumettes/Arbitre.java:		Random r = new Random();
	allumettes/Arbitre.java:		Random r = new Random();
	allumettes/Arbitre.java:		Random r = new Random();

Utilisation de '3' : ok

Utilisation de 'System.exit' : ok

Compilation de Jouer.java : OK.
Compilation de Arbitre.java : OK.
Test exemplePresqueSujet : ok
Test exempleTricheurSujet : ok
Test exempleConfiantTricheurSujet : ok
Test exempleRobustesse : ok
Test exempleHumainTricheurExpert : ok
Test exempleLucLea : ok
Test exempleRapideRapide : NON CONFORME (voir evaluations/penalites1/exempleRapideRapide.diff)
Test exempleTricheurExpert : ok

On recommence avec les classes/interfaces fournies : Jeu ConfigurationException CoupInvalideException
Compilation de Jouer.java : OK.
Compilation de Arbitre.java : OK.

Vérification du respect du diagramme de classe...
Test FormeTest : Tests run: 2,  Failures: 2	(voir evaluations/penalites1/FormeTest.log)
    1) testerC14_C15(FormeTest)
        AssertionError: Classe Joueur : Le type de la stratégie devrait être une interface
    2) testerRespectArchitecture(FormeTest)
        AssertionError: Méthode manquante dans la classe allumettes.Arbitre : arbitrer(allumettes.Jeu)


Aucune classe de test (fichier *Test.java ou Test*.java) !	(pénalité : 1)

Total pénalités : 5
